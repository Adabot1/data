[{"class": "java.util.concurrent.locks.ReentrantLock", "function": "lock", "parameters": []}, {"class": "java.util.concurrent.locks.ReentrantLock", "function": "toString", "parameters": []}, {"class": "java.util.concurrent.locks.ReentrantLock", "function": "lockInterruptibly", "parameters": []}, {"class": "java.util.concurrent.locks.ReentrantLock", "function": "tryLock", "parameters": []}, {"class": "java.util.concurrent.locks.ReentrantLock", "function": "unlock", "parameters": []}, {"class": "java.util.concurrent.locks.ReentrantLock", "function": "newCondition", "parameters": []}, {"class": "java.util.concurrent.locks.ReentrantLock", "function": "getHoldCount", "parameters": []}, {"class": "java.util.concurrent.locks.ReentrantLock", "function": "isHeldByCurrentThread", "parameters": []}, {"class": "java.util.concurrent.locks.ReentrantLock", "function": "isLocked", "parameters": []}, {"class": "java.util.concurrent.locks.ReentrantLock", "function": "isFair", "parameters": []}, {"class": "java.util.concurrent.locks.ReentrantLock", "function": "hasQueuedThreads", "parameters": []}, {"class": "java.util.concurrent.locks.ReentrantLock", "function": "getQueueLength", "parameters": []}, {"class": "java.util.concurrent.locks.ReentrantLock", "function": "wait", "parameters": []}, {"class": "java.util.concurrent.locks.ReentrantLock", "function": "hashCode", "parameters": []}, {"class": "java.util.concurrent.locks.ReentrantLock", "function": "getClass", "parameters": []}, {"class": "java.util.concurrent.locks.ReentrantLock", "function": "notify", "parameters": []}, {"class": "java.util.concurrent.locks.ReentrantLock", "function": "notifyAll", "parameters": []}]