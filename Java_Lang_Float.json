{
    "API": [
        {
            "Comments": "The number of bytes used to represent a float value.",
            "Function": "BYTES",
            "Modifier and Type": "static int"
        },
        {
            "Comments": "Maximum exponent a finite float variable may have.",
            "Function": "MAX_EXPONENT",
            "Modifier and Type": "static int"
        },
        {
            "Comments": "A constant holding the largest positive finite value of type float, (2-2-23)\u00b72127.",
            "Function": "MAX_VALUE",
            "Modifier and Type": "static float"
        },
        {
            "Comments": "Minimum exponent a normalized float variable may have.",
            "Function": "MIN_EXPONENT",
            "Modifier and Type": "static int"
        },
        {
            "Comments": "A constant holding the smallest positive normal value of type float, 2-126.",
            "Function": "MIN_NORMAL",
            "Modifier and Type": "static float"
        },
        {
            "Comments": "A constant holding the smallest positive nonzero value of type float, 2-149.",
            "Function": "MIN_VALUE",
            "Modifier and Type": "static float"
        },
        {
            "Comments": "A constant holding a Not-a-Number (NaN) value of type float.",
            "Function": "NaN",
            "Modifier and Type": "static float"
        },
        {
            "Comments": "A constant holding the negative infinity of type float.",
            "Function": "NEGATIVE_INFINITY",
            "Modifier and Type": "static float"
        },
        {
            "Comments": "A constant holding the positive infinity of type float.",
            "Function": "POSITIVE_INFINITY",
            "Modifier and Type": "static float"
        },
        {
            "Comments": "The number of bits used to represent a float value.",
            "Function": "SIZE",
            "Modifier and Type": "static int"
        },
        {
            "Comments": "The Class instance representing the primitive type float.",
            "Function": "TYPE",
            "Modifier and Type": "static Class<Float>"
        },
        {
            "Comments": "Returns the value of this Float as a byte after a narrowing primitive conversion.",
            "Function": "byteValue()",
            "Modifier and Type": "byte"
        },
        {
            "Comments": "Compares the two specified float values.",
            "Function": "compare(float f1, float f2)",
            "Modifier and Type": "static int"
        },
        {
            "Comments": "Compares two Float objects numerically.",
            "Function": "compareTo(Float anotherFloat)",
            "Modifier and Type": "int"
        },
        {
            "Comments": "Returns the value of this Float as a double after a widening primitive conversion.",
            "Function": "doubleValue()",
            "Modifier and Type": "double"
        },
        {
            "Comments": "Compares this object against the specified object.",
            "Function": "equals(Object obj)",
            "Modifier and Type": "boolean"
        },
        {
            "Comments": "Returns a representation of the specified floating-point value according to the IEEE 754 floating-point \"single format\" bit layout.",
            "Function": "floatToIntBits(float value)",
            "Modifier and Type": "static int"
        },
        {
            "Comments": "Returns a representation of the specified floating-point value according to the IEEE 754 floating-point \"single format\" bit layout, preserving Not-a-Number (NaN) values.",
            "Function": "floatToRawIntBits(float value)",
            "Modifier and Type": "static int"
        },
        {
            "Comments": "Returns the float value of this Float object.",
            "Function": "floatValue()",
            "Modifier and Type": "float"
        },
        {
            "Comments": "Returns a hash code for this Float object.",
            "Function": "hashCode()",
            "Modifier and Type": "int"
        },
        {
            "Comments": "Returns a hash code for a float value; compatible with Float.hashCode().",
            "Function": "hashCode(float value)",
            "Modifier and Type": "static int"
        },
        {
            "Comments": "Returns the float value corresponding to a given bit representation.",
            "Function": "intBitsToFloat(int bits)",
            "Modifier and Type": "static float"
        },
        {
            "Comments": "Returns the value of this Float as an int after a narrowing primitive conversion.",
            "Function": "intValue()",
            "Modifier and Type": "int"
        },
        {
            "Comments": "Returns true if the argument is a finite floating-point value; returns false otherwise (for NaN and infinity arguments).",
            "Function": "isFinite(float f)",
            "Modifier and Type": "static boolean"
        },
        {
            "Comments": "Returns true if this Float value is infinitely large in magnitude, false otherwise.",
            "Function": "isInfinite()",
            "Modifier and Type": "boolean"
        },
        {
            "Comments": "Returns true if the specified number is infinitely large in magnitude, false otherwise.",
            "Function": "isInfinite(float v)",
            "Modifier and Type": "static boolean"
        },
        {
            "Comments": "Returns true if this Float value is a Not-a-Number (NaN), false otherwise.",
            "Function": "isNaN()",
            "Modifier and Type": "boolean"
        },
        {
            "Comments": "Returns true if the specified number is a Not-a-Number (NaN) value, false otherwise.",
            "Function": "isNaN(float v)",
            "Modifier and Type": "static boolean"
        },
        {
            "Comments": "Returns value of this Float as a long after a narrowing primitive conversion.",
            "Function": "longValue()",
            "Modifier and Type": "long"
        },
        {
            "Comments": "Returns the greater of two float values as if by calling Math.max.",
            "Function": "max(float a, float b)",
            "Modifier and Type": "static float"
        },
        {
            "Comments": "Returns the smaller of two float values as if by calling Math.min.",
            "Function": "min(float a, float b)",
            "Modifier and Type": "static float"
        },
        {
            "Comments": "Returns a new float initialized to the value represented by the specified String, as performed by the valueOf method of class Float.",
            "Function": "parseFloat(String s)",
            "Modifier and Type": "static float"
        },
        {
            "Comments": "Returns the value of this Float as a short after a narrowing primitive conversion.",
            "Function": "shortValue()",
            "Modifier and Type": "short"
        },
        {
            "Comments": "Adds two float values together as per the + operator.",
            "Function": "sum(float a, float b)",
            "Modifier and Type": "static float"
        },
        {
            "Comments": "Returns a hexadecimal string representation of the float argument.",
            "Function": "toHexString(float f)",
            "Modifier and Type": "static String"
        },
        {
            "Comments": "Returns a string representation of this Float object.",
            "Function": "toString()",
            "Modifier and Type": "String"
        },
        {
            "Comments": "Returns a string representation of the float argument.",
            "Function": "toString(float f)",
            "Modifier and Type": "static String"
        },
        {
            "Comments": "Returns a Float instance representing the specified float value.",
            "Function": "valueOf(float f)",
            "Modifier and Type": "static Float"
        },
        {
            "Comments": "Returns a Float object holding the float value represented by the argument string s.",
            "Function": "valueOf(String s)",
            "Modifier and Type": "static Float"
        }
    ]
}