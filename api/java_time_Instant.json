{
    "API": [
        {
            "Comments": "Constant for the 1970-01-01T00:00:00Z epoch instant.",
            "Function": "EPOCH",
            "Modifier and Type": "static Instant"
        },
        {
            "Comments": "The maximum supported Instant, '1000000000-12-31T23:59:59.999999999Z'.",
            "Function": "MAX",
            "Modifier and Type": "static Instant"
        },
        {
            "Comments": "The minimum supported Instant, '-1000000000-01-01T00:00Z'.",
            "Function": "MIN",
            "Modifier and Type": "static Instant"
        },
        {
            "Comments": "Adjusts the specified temporal object to have this instant.",
            "Function": "adjustInto(Temporal temporal)",
            "Modifier and Type": "Temporal"
        },
        {
            "Comments": "Combines this instant with an offset to create an OffsetDateTime.",
            "Function": "atOffset(ZoneOffset offset)",
            "Modifier and Type": "OffsetDateTime"
        },
        {
            "Comments": "Combines this instant with a time-zone to create a ZonedDateTime.",
            "Function": "atZone(ZoneId zone)",
            "Modifier and Type": "ZonedDateTime"
        },
        {
            "Comments": "Compares this instant to the specified instant.",
            "Function": "compareTo(Instant otherInstant)",
            "Modifier and Type": "int"
        },
        {
            "Comments": "Checks if this instant is equal to the specified instant.",
            "Function": "equals(Object otherInstant)",
            "Modifier and Type": "boolean"
        },
        {
            "Comments": "Obtains an instance of Instant from a temporal object.",
            "Function": "from(TemporalAccessor temporal)",
            "Modifier and Type": "static Instant"
        },
        {
            "Comments": "Gets the value of the specified field from this instant as an int.",
            "Function": "get(TemporalField field)",
            "Modifier and Type": "int"
        },
        {
            "Comments": "Gets the number of seconds from the Java epoch of 1970-01-01T00:00:00Z.",
            "Function": "getEpochSecond()",
            "Modifier and Type": "long"
        },
        {
            "Comments": "Gets the value of the specified field from this instant as a long.",
            "Function": "getLong(TemporalField field)",
            "Modifier and Type": "long"
        },
        {
            "Comments": "Gets the number of nanoseconds, later along the time-line, from the start of the second.",
            "Function": "getNano()",
            "Modifier and Type": "int"
        },
        {
            "Comments": "Returns a hash code for this instant.",
            "Function": "hashCode()",
            "Modifier and Type": "int"
        },
        {
            "Comments": "Checks if this instant is after the specified instant.",
            "Function": "isAfter(Instant otherInstant)",
            "Modifier and Type": "boolean"
        },
        {
            "Comments": "Checks if this instant is before the specified instant.",
            "Function": "isBefore(Instant otherInstant)",
            "Modifier and Type": "boolean"
        },
        {
            "Comments": "Checks if the specified field is supported.",
            "Function": "isSupported(TemporalField field)",
            "Modifier and Type": "boolean"
        },
        {
            "Comments": "Checks if the specified unit is supported.",
            "Function": "isSupported(TemporalUnit unit)",
            "Modifier and Type": "boolean"
        },
        {
            "Comments": "Returns a copy of this instant with the specified amount subtracted.",
            "Function": "minus(long amountToSubtract, TemporalUnit unit)",
            "Modifier and Type": "Instant"
        },
        {
            "Comments": "Returns a copy of this instant with the specified amount subtracted.",
            "Function": "minus(TemporalAmount amountToSubtract)",
            "Modifier and Type": "Instant"
        },
        {
            "Comments": "Returns a copy of this instant with the specified duration in milliseconds subtracted.",
            "Function": "minusMillis(long millisToSubtract)",
            "Modifier and Type": "Instant"
        },
        {
            "Comments": "Returns a copy of this instant with the specified duration in nanoseconds subtracted.",
            "Function": "minusNanos(long nanosToSubtract)",
            "Modifier and Type": "Instant"
        },
        {
            "Comments": "Returns a copy of this instant with the specified duration in seconds subtracted.",
            "Function": "minusSeconds(long secondsToSubtract)",
            "Modifier and Type": "Instant"
        },
        {
            "Comments": "Obtains the current instant from the system clock.",
            "Function": "now()",
            "Modifier and Type": "static Instant"
        },
        {
            "Comments": "Obtains the current instant from the specified clock.",
            "Function": "now(Clock clock)",
            "Modifier and Type": "static Instant"
        },
        {
            "Comments": "Obtains an instance of Instant using milliseconds from the epoch of 1970-01-01T00:00:00Z.",
            "Function": "ofEpochMilli(long epochMilli)",
            "Modifier and Type": "static Instant"
        },
        {
            "Comments": "Obtains an instance of Instant using seconds from the epoch of 1970-01-01T00:00:00Z.",
            "Function": "ofEpochSecond(long epochSecond)",
            "Modifier and Type": "static Instant"
        },
        {
            "Comments": "Obtains an instance of Instant using seconds from the epoch of 1970-01-01T00:00:00Z and nanosecond fraction of second.",
            "Function": "ofEpochSecond(long epochSecond, long nanoAdjustment)",
            "Modifier and Type": "static Instant"
        },
        {
            "Comments": "Obtains an instance of Instant from a text string such as 2007-12-03T10:15:30.00Z.",
            "Function": "parse(CharSequence text)",
            "Modifier and Type": "static Instant"
        },
        {
            "Comments": "Returns a copy of this instant with the specified amount added.",
            "Function": "plus(long amountToAdd,TemporalUnit unit)",
            "Modifier and Type": "Instant"
        },
        {
            "Comments": "Returns a copy of this instant with the specified amount added.",
            "Function": "plus(TemporalAmount amountToAdd)",
            "Modifier and Type": "Instant"
        },
        {
            "Comments": "Returns a copy of this instant with the specified duration in milliseconds added.",
            "Function": "plusMillis(long millisToAdd)",
            "Modifier and Type": "Instant"
        },
        {
            "Comments": "Returns a copy of this instant with the specified duration in nanoseconds added.",
            "Function": "plusNanos(long nanosToAdd)",
            "Modifier and Type": "Instant"
        },
        {
            "Comments": "Returns a copy of this instant with the specified duration in seconds added.",
            "Function": "plusSeconds(long secondsToAdd)",
            "Modifier and Type": "Instant"
        },
        {
            "Comments": "Queries this instant using the specified query.",
            "Function": "query(TemporalQuery<R> query)",
            "Modifier and Type": "<R> R"
        },
        {
            "Comments": "Gets the range of valid values for the specified field.",
            "Function": "range(TemporalField field)",
            "Modifier and Type": "ValueRange"
        },
        {
            "Comments": "Converts this instant to the number of milliseconds from the epoch of 1970-01-01T00:00:00Z.",
            "Function": "toEpochMilli()",
            "Modifier and Type": "long"
        },
        {
            "Comments": "A string representation of this instant using ISO-8601 representation.",
            "Function": "toString()",
            "Modifier and Type": "String"
        },
        {
            "Comments": "Returns a copy of this Instant truncated to the specified unit.",
            "Function": "truncatedTo(TemporalUnit unit)",
            "Modifier and Type": "Instant"
        },
        {
            "Comments": "Calculates the amount of time until another instant in terms of the specified unit.",
            "Function": "until(Temporal endExclusive, TemporalUnit unit)",
            "Modifier and Type": "long"
        },
        {
            "Comments": "Returns an adjusted copy of this instant.",
            "Function": "with(TemporalAdjuster adjuster)",
            "Modifier and Type": "Instant"
        },
        {
            "Comments": "Returns a copy of this instant with the specified field set to a new value.",
            "Function": "with(TemporalField field,long newValue)",
            "Modifier and Type": "Instant"
        }
    ]
}