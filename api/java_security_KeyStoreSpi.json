{
    "API": [
        {
            "Comments": "Lists all the alias names of this keystore.",
            "Function": "engineAliases()",
            "Modifier and Type": "abstract Enumeration<String>"
        },
        {
            "Comments": "Checks if the given alias exists in this keystore.",
            "Function": "engineContainsAlias(String alias)",
            "Modifier and Type": "abstract boolean"
        },
        {
            "Comments": "Deletes the entry identified by the given alias from this keystore.",
            "Function": "engineDeleteEntry(String alias)",
            "Modifier and Type": "abstract void"
        },
        {
            "Comments": "Determines if the keystore Entry for the specified alias is an instance or subclass of the specified entryClass.",
            "Function": "engineEntryInstanceOf(String alias, Class<? extends KeyStore.Entry> entryClass)",
            "Modifier and Type": "boolean"
        },
        {
            "Comments": "Returns the certificate associated with the given alias.",
            "Function": "engineGetCertificate(String alias)",
            "Modifier and Type": "abstract Certificate"
        },
        {
            "Comments": "Returns the (alias) name of the first keystore entry whose certificate matches the given certificate.",
            "Function": "engineGetCertificateAlias(Certificate cert)",
            "Modifier and Type": "abstract String"
        },
        {
            "Comments": "Returns the certificate chain associated with the given alias.",
            "Function": "engineGetCertificateChain(String alias)",
            "Modifier and Type": "abstract Certificate[]"
        },
        {
            "Comments": "Returns the creation date of the entry identified by the given alias.",
            "Function": "engineGetCreationDate(String alias)",
            "Modifier and Type": "abstract Date"
        },
        {
            "Comments": "Gets a KeyStore.Entry for the specified alias with the specified protection parameter.",
            "Function": "engineGetEntry(String alias,KeyStore.ProtectionParameter protParam)",
            "Modifier and Type": "KeyStore.Entry"
        },
        {
            "Comments": "Returns the key associated with the given alias, using the given password to recover it.",
            "Function": "engineGetKey(String alias,char[] password)",
            "Modifier and Type": "abstract Key"
        },
        {
            "Comments": "Returns true if the entry identified by the given alias was created by a call to setCertificateEntry, or created by a call to setEntry with a TrustedCertificateEntry.",
            "Function": "engineIsCertificateEntry(String alias)",
            "Modifier and Type": "abstract boolean"
        },
        {
            "Comments": "Returns true if the entry identified by the given alias was created by a call to setKeyEntry, or created by a call to setEntry with a PrivateKeyEntry or a SecretKeyEntry.",
            "Function": "engineIsKeyEntry(String alias)",
            "Modifier and Type": "abstract boolean"
        },
        {
            "Comments": "Loads the keystore from the given input stream.",
            "Function": "engineLoad(InputStream stream,char[] password)",
            "Modifier and Type": "abstract void"
        },
        {
            "Comments": "Loads the keystore using the given KeyStore.LoadStoreParameter.",
            "Function": "engineLoad(KeyStore.LoadStoreParameter param)",
            "Modifier and Type": "void"
        },
        {
            "Comments": "Probes the specified input stream to determine whether it contains a keystore that is supported by this implementation, or not.",
            "Function": "engineProbe(InputStream stream)",
            "Modifier and Type": "boolean"
        },
        {
            "Comments": "Assigns the given certificate to the given alias.",
            "Function": "engineSetCertificateEntry(String alias, Certificate cert)",
            "Modifier and Type": "abstract void"
        },
        {
            "Comments": "Saves a KeyStore.Entry under the specified alias.",
            "Function": "engineSetEntry(String alias,KeyStore.Entry entry,KeyStore.ProtectionParameter protParam)",
            "Modifier and Type": "void"
        },
        {
            "Comments": "Assigns the given key (that has already been protected) to the given alias.",
            "Function": "engineSetKeyEntry(String alias, byte[] key, Certificate[] chain)",
            "Modifier and Type": "abstract void"
        },
        {
            "Comments": "Assigns the given key to the given alias, protecting it with the given password.",
            "Function": "engineSetKeyEntry(String alias, Key key, char[] password, Certificate[] chain)",
            "Modifier and Type": "abstract void"
        },
        {
            "Comments": "Retrieves the number of entries in this keystore.",
            "Function": "engineSize()",
            "Modifier and Type": "abstract int"
        },
        {
            "Comments": "Stores this keystore to the given output stream, and protects its integrity with the given password.",
            "Function": "engineStore(OutputStream stream, char[] password)",
            "Modifier and Type": "abstract void"
        },
        {
            "Comments": "Stores this keystore using the given KeyStore.LoadStoreParmeter.",
            "Function": "engineStore(KeyStore.LoadStoreParameter param)",
            "Modifier and Type": "void"
        }
    ]
}