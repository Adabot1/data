{
    "API": [
        {
            "Comments": "Constant for the maximum supported offset.",
            "Function": "MAX",
            "Modifier and Type": "static ZoneOffset"
        },
        {
            "Comments": "Constant for the minimum supported offset.",
            "Function": "MIN",
            "Modifier and Type": "static ZoneOffset"
        },
        {
            "Comments": "The time-zone offset for UTC, with an ID of 'Z'.",
            "Function": "UTC",
            "Modifier and Type": "static ZoneOffset"
        },
        {
            "Comments": "Adjusts the specified temporal object to have the same offset as this object.",
            "Function": "adjustInto(Temporal temporal)",
            "Modifier and Type": "Temporal"
        },
        {
            "Comments": "Compares this offset to another offset in descending order.",
            "Function": "compareTo(ZoneOffset other)",
            "Modifier and Type": "int"
        },
        {
            "Comments": "Checks if this offset is equal to another offset.",
            "Function": "equals(Object obj)",
            "Modifier and Type": "boolean"
        },
        {
            "Comments": "Obtains an instance of ZoneOffset from a temporal object.",
            "Function": "from(TemporalAccessor temporal)",
            "Modifier and Type": "static ZoneOffset"
        },
        {
            "Comments": "Gets the value of the specified field from this offset as an int.",
            "Function": "get(TemporalField field)",
            "Modifier and Type": "int"
        },
        {
            "Comments": "Gets the normalized zone offset ID.",
            "Function": "getId()",
            "Modifier and Type": "String"
        },
        {
            "Comments": "Gets the value of the specified field from this offset as a long.",
            "Function": "getLong(TemporalField field)",
            "Modifier and Type": "long"
        },
        {
            "Comments": "Gets the associated time-zone rules.",
            "Function": "getRules()",
            "Modifier and Type": "ZoneRules"
        },
        {
            "Comments": "Gets the total zone offset in seconds.",
            "Function": "getTotalSeconds()",
            "Modifier and Type": "int"
        },
        {
            "Comments": "A hash code for this offset.",
            "Function": "hashCode()",
            "Modifier and Type": "int"
        },
        {
            "Comments": "Checks if the specified field is supported.",
            "Function": "isSupported(TemporalField field)",
            "Modifier and Type": "boolean"
        },
        {
            "Comments": "Obtains an instance of ZoneOffset using the ID.",
            "Function": "of(String offsetId)",
            "Modifier and Type": "static ZoneOffset"
        },
        {
            "Comments": "Obtains an instance of ZoneOffset using an offset in hours.",
            "Function": "ofHours(int hours)",
            "Modifier and Type": "static ZoneOffset"
        },
        {
            "Comments": "Obtains an instance of ZoneOffset using an offset in hours and minutes.",
            "Function": "ofHoursMinutes(int hours,int minutes)",
            "Modifier and Type": "static ZoneOffset"
        },
        {
            "Comments": "Obtains an instance of ZoneOffset using an offset in hours, minutes and seconds.",
            "Function": "ofHoursMinutesSeconds(int hours, int minutes, int seconds)",
            "Modifier and Type": "static ZoneOffset"
        },
        {
            "Comments": "Obtains an instance of ZoneOffset specifying the total offset in seconds",
            "Function": "ofTotalSeconds(int totalSeconds)",
            "Modifier and Type": "static ZoneOffset"
        },
        {
            "Comments": "Queries this offset using the specified query.",
            "Function": "query(TemporalQuery<R> query)",
            "Modifier and Type": "<R> R"
        },
        {
            "Comments": "Gets the range of valid values for the specified field.",
            "Function": "range(TemporalField field)",
            "Modifier and Type": "ValueRange"
        },
        {
            "Comments": "Outputs this offset as a String, using the normalized ID.",
            "Function": "toString()",
            "Modifier and Type": "String"
        }
    ]
}