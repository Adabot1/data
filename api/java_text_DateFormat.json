{
    "API": [
        {
            "Comments": "Defines constants that are used as attribute keys in the AttributedCharacterIterator returned from DateFormat.formatToCharacterIterator and as field identifiers in FieldPosition.",
            "Function": "DateFormat.Field",
            "Modifier and Type": "static class "
        },
        {
            "Comments": "Useful constant for AM_PM field alignment.",
            "Function": "AM_PM_FIELD",
            "Modifier and Type": "static int"
        },
        {
            "Comments": "The Calendar instance used for calculating the date-time fields and the instant of time.",
            "Function": "calendar",
            "Modifier and Type": "protected Calendar"
        },
        {
            "Comments": "Useful constant for DATE field alignment.",
            "Function": "DATE_FIELD",
            "Modifier and Type": "static int"
        },
        {
            "Comments": "Useful constant for DAY_OF_WEEK field alignment.",
            "Function": "DAY_OF_WEEK_FIELD",
            "Modifier and Type": "static int"
        },
        {
            "Comments": "Useful constant for DAY_OF_WEEK_IN_MONTH field alignment.",
            "Function": "DAY_OF_WEEK_IN_MONTH_FIELD",
            "Modifier and Type": "static int"
        },
        {
            "Comments": "Useful constant for DAY_OF_YEAR field alignment.",
            "Function": "DAY_OF_YEAR_FIELD",
            "Modifier and Type": "static int"
        },
        {
            "Comments": "Constant for default style pattern.",
            "Function": "DEFAULT",
            "Modifier and Type": "static int"
        },
        {
            "Comments": "Useful constant for ERA field alignment.",
            "Function": "ERA_FIELD",
            "Modifier and Type": "static int"
        },
        {
            "Comments": "Constant for full style pattern.",
            "Function": "FULL",
            "Modifier and Type": "static int"
        },
        {
            "Comments": "Useful constant for zero-based HOUR_OF_DAY field alignment.",
            "Function": "HOUR_OF_DAY0_FIELD",
            "Modifier and Type": "static int"
        },
        {
            "Comments": "Useful constant for one-based HOUR_OF_DAY field alignment.",
            "Function": "HOUR_OF_DAY1_FIELD",
            "Modifier and Type": "static int"
        },
        {
            "Comments": "Useful constant for zero-based HOUR field alignment.",
            "Function": "HOUR0_FIELD",
            "Modifier and Type": "static int"
        },
        {
            "Comments": "Useful constant for one-based HOUR field alignment.",
            "Function": "HOUR1_FIELD",
            "Modifier and Type": "static int"
        },
        {
            "Comments": "Constant for long style pattern.",
            "Function": "LONG",
            "Modifier and Type": "static int"
        },
        {
            "Comments": "Constant for medium style pattern.",
            "Function": "MEDIUM",
            "Modifier and Type": "static int"
        },
        {
            "Comments": "Useful constant for MILLISECOND field alignment.",
            "Function": "MILLISECOND_FIELD",
            "Modifier and Type": "static int"
        },
        {
            "Comments": "Useful constant for MINUTE field alignment.",
            "Function": "MINUTE_FIELD",
            "Modifier and Type": "static int"
        },
        {
            "Comments": "Useful constant for MONTH field alignment.",
            "Function": "MONTH_FIELD",
            "Modifier and Type": "static int"
        },
        {
            "Comments": "The number formatter that DateFormat uses to format numbers in dates and times.",
            "Function": "numberFormat",
            "Modifier and Type": "protected NumberFormat"
        },
        {
            "Comments": "Useful constant for SECOND field alignment.",
            "Function": "SECOND_FIELD",
            "Modifier and Type": "static int"
        },
        {
            "Comments": "Constant for short style pattern.",
            "Function": "SHORT",
            "Modifier and Type": "static int"
        },
        {
            "Comments": "Useful constant for TIMEZONE field alignment.",
            "Function": "TIMEZONE_FIELD",
            "Modifier and Type": "static int"
        },
        {
            "Comments": "Useful constant for WEEK_OF_MONTH field alignment.",
            "Function": "WEEK_OF_MONTH_FIELD",
            "Modifier and Type": "static int"
        },
        {
            "Comments": "Useful constant for WEEK_OF_YEAR field alignment.",
            "Function": "WEEK_OF_YEAR_FIELD",
            "Modifier and Type": "static int"
        },
        {
            "Comments": "Useful constant for YEAR field alignment.",
            "Function": "YEAR_FIELD",
            "Modifier and Type": "static int"
        },
        {
            "Comments": "Create a new date format.",
            "Function": "clone()",
            "Modifier and Type": "protected "
        },
        {
            "Comments": "Overrides Cloneable",
            "Function": "equals(Object obj)",
            "Modifier and Type": "Object"
        },
        {
            "Comments": "Overrides equals",
            "Function": "format(Object obj,StringBuffer toAppendTo,FieldPosition fieldPosition)",
            "Modifier and Type": "boolean"
        },
        {
            "Comments": "Formats the given Object into a date-time string.",
            "Function": "format(Date date)",
            "Modifier and Type": "StringBuffer"
        },
        {
            "Comments": "Formats a Date into a date-time string.",
            "Function": "format(Date date,StringBuffer toAppendTo,FieldPosition fieldPosition)",
            "Modifier and Type": "String"
        },
        {
            "Comments": "Formats a Date into a date-time string.",
            "Function": "getAvailableLocales()",
            "Modifier and Type": "abstract StringBuffer"
        },
        {
            "Comments": "Returns an array of all locales for which the get*Instance methods of this class can return localized instances.",
            "Function": "getCalendar()",
            "Modifier and Type": "static Locale[]"
        },
        {
            "Comments": "Gets the calendar associated with this date/time formatter.",
            "Function": "getDateInstance()",
            "Modifier and Type": "Calendar"
        },
        {
            "Comments": "Gets the date formatter with the default formatting style for the default FORMAT locale.",
            "Function": "getDateInstance(int style)",
            "Modifier and Type": "static DateFormat"
        },
        {
            "Comments": "Gets the date formatter with the given formatting style for the default FORMAT locale.",
            "Function": "getDateInstance(int style, Locale aLocale)",
            "Modifier and Type": "static DateFormat"
        },
        {
            "Comments": "Gets the date formatter with the given formatting style for the given locale.",
            "Function": "getDateTimeInstance()",
            "Modifier and Type": "static DateFormat"
        },
        {
            "Comments": "Gets the date/time formatter with the default formatting style for the default FORMAT locale.",
            "Function": "getDateTimeInstance(int dateStyle, int timeStyle)",
            "Modifier and Type": "static DateFormat"
        },
        {
            "Comments": "Gets the date/time formatter with the given date and time formatting styles for the default FORMAT locale.",
            "Function": "getDateTimeInstance(int dateStyle, int timeStyle, Locale aLocale)",
            "Modifier and Type": "static DateFormat"
        },
        {
            "Comments": "Gets the date/time formatter with the given formatting styles for the given locale.",
            "Function": "getInstance()",
            "Modifier and Type": "static DateFormat"
        },
        {
            "Comments": "Get a default date/time formatter that uses the SHORT style for both the date and the time.",
            "Function": "getNumberFormat()",
            "Modifier and Type": "static DateFormat"
        },
        {
            "Comments": "Gets the number formatter which this date/time formatter uses to format and parse a time.",
            "Function": "getTimeInstance()",
            "Modifier and Type": "NumberFormat"
        },
        {
            "Comments": "Gets the time formatter with the default formatting style for the default FORMAT locale.",
            "Function": "getTimeInstance(int style)",
            "Modifier and Type": "static DateFormat"
        },
        {
            "Comments": "Gets the time formatter with the given formatting style for the default FORMAT locale.",
            "Function": "getTimeInstance(int style, Locale aLocale)",
            "Modifier and Type": "static DateFormat"
        },
        {
            "Comments": "Gets the time formatter with the given formatting style for the given locale.",
            "Function": "getTimeZone()",
            "Modifier and Type": "static DateFormat"
        },
        {
            "Comments": "Gets the time zone.",
            "Function": "hashCode()",
            "Modifier and Type": "TimeZone"
        },
        {
            "Comments": "Overrides hashCode",
            "Function": "isLenient()",
            "Modifier and Type": "int"
        },
        {
            "Comments": "Tell whether date/time parsing is to be lenient.",
            "Function": "parse(String source)",
            "Modifier and Type": "boolean"
        },
        {
            "Comments": "Parses text from the beginning of the given string to produce a date.",
            "Function": "parse(String source, ParsePosition pos)",
            "Modifier and Type": "Date"
        },
        {
            "Comments": "Parse a date/time string according to the given parse position.",
            "Function": "parseObject(String source, ParsePosition pos)",
            "Modifier and Type": "abstract Date"
        },
        {
            "Comments": "Parses text from a string to produce a Date.",
            "Function": "setCalendar(Calendar newCalendar)",
            "Modifier and Type": "Object"
        },
        {
            "Comments": "Set the calendar to be used by this date format.",
            "Function": "setLenient(boolean lenient)",
            "Modifier and Type": "void"
        },
        {
            "Comments": "Specify whether or not date/time parsing is to be lenient.",
            "Function": "setNumberFormat(NumberFormat newNumberFormat)",
            "Modifier and Type": "void"
        },
        {
            "Comments": "Allows you to set the number formatter.",
            "Function": "setTimeZone(TimeZone zone)",
            "Modifier and Type": "void"
        }
    ]
}