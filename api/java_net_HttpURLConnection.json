{
    "API": [
        {
            "Comments": "The chunk-length when using chunked encoding streaming mode for output.",
            "Function": "chunkLength",
            "Modifier and Type": "protected int"
        },
        {
            "Comments": "The fixed content-length when using fixed-length streaming mode.",
            "Function": "fixedContentLength",
            "Modifier and Type": "protected int"
        },
        {
            "Comments": "The fixed content-length when using fixed-length streaming mode.",
            "Function": "fixedContentLengthLong",
            "Modifier and Type": "protected long"
        },
        {
            "Comments": "HTTP Status-Code 202: Accepted.",
            "Function": "HTTP_ACCEPTED",
            "Modifier and Type": "static int"
        },
        {
            "Comments": "HTTP Status-Code 502: Bad Gateway.",
            "Function": "HTTP_BAD_GATEWAY",
            "Modifier and Type": "static int"
        },
        {
            "Comments": "HTTP Status-Code 405: Method Not Allowed.",
            "Function": "HTTP_BAD_METHOD",
            "Modifier and Type": "static int"
        },
        {
            "Comments": "HTTP Status-Code 400: Bad Request.",
            "Function": "HTTP_BAD_REQUEST",
            "Modifier and Type": "static int"
        },
        {
            "Comments": "HTTP Status-Code 408: Request Time-Out.",
            "Function": "HTTP_CLIENT_TIMEOUT",
            "Modifier and Type": "static int"
        },
        {
            "Comments": "HTTP Status-Code 409: Conflict.",
            "Function": "HTTP_CONFLICT",
            "Modifier and Type": "static int"
        },
        {
            "Comments": "HTTP Status-Code 201: Created.",
            "Function": "HTTP_CREATED",
            "Modifier and Type": "static int"
        },
        {
            "Comments": "HTTP Status-Code 413: Request Entity Too Large.",
            "Function": "HTTP_ENTITY_TOO_LARGE",
            "Modifier and Type": "static int"
        },
        {
            "Comments": "HTTP Status-Code 403: Forbidden.",
            "Function": "HTTP_FORBIDDEN",
            "Modifier and Type": "static int"
        },
        {
            "Comments": "HTTP Status-Code 504: Gateway Timeout.",
            "Function": "HTTP_GATEWAY_TIMEOUT",
            "Modifier and Type": "static int"
        },
        {
            "Comments": "HTTP Status-Code 410: Gone.",
            "Function": "HTTP_GONE",
            "Modifier and Type": "static int"
        },
        {
            "Comments": "HTTP Status-Code 500: Internal Server Error.",
            "Function": "HTTP_INTERNAL_ERROR",
            "Modifier and Type": "static int"
        },
        {
            "Comments": "HTTP Status-Code 411: Length Required.",
            "Function": "HTTP_LENGTH_REQUIRED",
            "Modifier and Type": "static int"
        },
        {
            "Comments": "HTTP Status-Code 301: Moved Permanently.",
            "Function": "HTTP_MOVED_PERM",
            "Modifier and Type": "static int"
        },
        {
            "Comments": "HTTP Status-Code 302: Temporary Redirect.",
            "Function": "HTTP_MOVED_TEMP",
            "Modifier and Type": "static int"
        },
        {
            "Comments": "HTTP Status-Code 300: Multiple Choices.",
            "Function": "HTTP_MULT_CHOICE",
            "Modifier and Type": "static int"
        },
        {
            "Comments": "HTTP Status-Code 204: No Content.",
            "Function": "HTTP_NO_CONTENT",
            "Modifier and Type": "static int"
        },
        {
            "Comments": "HTTP Status-Code 406: Not Acceptable.",
            "Function": "HTTP_NOT_ACCEPTABLE",
            "Modifier and Type": "static int"
        },
        {
            "Comments": "HTTP Status-Code 203: Non-Authoritative Information.",
            "Function": "HTTP_NOT_AUTHORITATIVE",
            "Modifier and Type": "static int"
        },
        {
            "Comments": "HTTP Status-Code 404: Not Found.",
            "Function": "HTTP_NOT_FOUND",
            "Modifier and Type": "static int"
        },
        {
            "Comments": "HTTP Status-Code 501: Not Implemented.",
            "Function": "HTTP_NOT_IMPLEMENTED",
            "Modifier and Type": "static int"
        },
        {
            "Comments": "HTTP Status-Code 304: Not Modified.",
            "Function": "HTTP_NOT_MODIFIED",
            "Modifier and Type": "static int"
        },
        {
            "Comments": "HTTP Status-Code 200: OK.",
            "Function": "HTTP_OK",
            "Modifier and Type": "static int"
        },
        {
            "Comments": "HTTP Status-Code 206: Partial Content.",
            "Function": "HTTP_PARTIAL",
            "Modifier and Type": "static int"
        },
        {
            "Comments": "HTTP Status-Code 402: Payment Required.",
            "Function": "HTTP_PAYMENT_REQUIRED",
            "Modifier and Type": "static int"
        },
        {
            "Comments": "HTTP Status-Code 412: Precondition Failed.",
            "Function": "HTTP_PRECON_FAILED",
            "Modifier and Type": "static int"
        },
        {
            "Comments": "HTTP Status-Code 407: Proxy Authentication Required.",
            "Function": "HTTP_PROXY_AUTH",
            "Modifier and Type": "static int"
        },
        {
            "Comments": "HTTP Status-Code 414: Request-URI Too Large.",
            "Function": "HTTP_REQ_TOO_LONG",
            "Modifier and Type": "static int"
        },
        {
            "Comments": "HTTP Status-Code 205: Reset Content.",
            "Function": "HTTP_RESET",
            "Modifier and Type": "static int"
        },
        {
            "Comments": "HTTP Status-Code 303: See Other.",
            "Function": "HTTP_SEE_OTHER",
            "Modifier and Type": "static int"
        },
        {
            "Comments": "Deprecated.it is misplaced and shouldn't have existed.",
            "Function": "HTTP_SERVER_ERROR",
            "Modifier and Type": "static int"
        },
        {
            "Comments": "HTTP Status-Code 401: Unauthorized.",
            "Function": "HTTP_UNAUTHORIZED",
            "Modifier and Type": "static int"
        },
        {
            "Comments": "HTTP Status-Code 503: Service Unavailable.",
            "Function": "HTTP_UNAVAILABLE",
            "Modifier and Type": "static int"
        },
        {
            "Comments": "HTTP Status-Code 415: Unsupported Media Type.",
            "Function": "HTTP_UNSUPPORTED_TYPE",
            "Modifier and Type": "static int"
        },
        {
            "Comments": "HTTP Status-Code 305: Use Proxy.",
            "Function": "HTTP_USE_PROXY",
            "Modifier and Type": "static int"
        },
        {
            "Comments": "HTTP Status-Code 505: HTTP Version Not Supported.",
            "Function": "HTTP_VERSION",
            "Modifier and Type": "static int"
        },
        {
            "Comments": "If true, the protocol will automatically follow redirects.",
            "Function": "instanceFollowRedirects",
            "Modifier and Type": "protected boolean"
        },
        {
            "Comments": "The HTTP method (GET,POST,PUT,etc.).",
            "Function": "method",
            "Modifier and Type": "protected String"
        },
        {
            "Comments": "An int representing the three digit HTTP Status-Code.",
            "Function": "responseCode",
            "Modifier and Type": "protected int"
        },
        {
            "Comments": "The HTTP response message.",
            "Function": "responseMessage",
            "Modifier and Type": "protected String"
        },
        {
            "Comments": "Constructor for the HttpURLConnection.",
            "Function": "disconnect()",
            "Modifier and Type": "protected "
        },
        {
            "Comments": "Indicates that other requests to the server are unlikely in the near future.",
            "Function": "getErrorStream()",
            "Modifier and Type": "abstract void"
        },
        {
            "Comments": "Returns the error stream if the connection failed but the server sent useful data nonetheless.",
            "Function": "getFollowRedirects()",
            "Modifier and Type": "InputStream"
        },
        {
            "Comments": "Returns a boolean indicating whether or not HTTP redirects (3xx) should be automatically followed.",
            "Function": "getHeaderField(int n)",
            "Modifier and Type": "static boolean"
        },
        {
            "Comments": "Returns the value for the nth header field.",
            "Function": "getHeaderFieldKey(int n)",
            "Modifier and Type": "String"
        },
        {
            "Comments": "Returns the key for the nth header field.",
            "Function": "getInstanceFollowRedirects()",
            "Modifier and Type": "String"
        },
        {
            "Comments": "Returns the value of this HttpURLConnection's instanceFollowRedirects field.",
            "Function": "getPermission()",
            "Modifier and Type": "boolean"
        },
        {
            "Comments": "Returns a SocketPermission object representing the permission necessary to connect to the destination host and port.",
            "Function": "getRequestMethod()",
            "Modifier and Type": "Permission"
        },
        {
            "Comments": "Get the request method.",
            "Function": "getResponseCode()",
            "Modifier and Type": "String"
        },
        {
            "Comments": "Gets the status code from an HTTP response message.",
            "Function": "getResponseMessage()",
            "Modifier and Type": "int"
        },
        {
            "Comments": "Gets the HTTP response message, if any, returned along with the response code from a server.",
            "Function": "setAuthenticator(Authenticator auth)",
            "Modifier and Type": "String"
        },
        {
            "Comments": "Supplies an Authenticator to be used when authentication is requested through the HTTP protocol for this HttpURLConnection.",
            "Function": "setChunkedStreamingMode(int chunklen)",
            "Modifier and Type": "void"
        },
        {
            "Comments": "This method is used to enable streaming of a HTTP request body without internal buffering, when the content length is not known in advance.",
            "Function": "setFixedLengthStreamingMode(int contentLength)",
            "Modifier and Type": "void"
        },
        {
            "Comments": "This method is used to enable streaming of a HTTP request body without internal buffering, when the content length is known in advance.",
            "Function": "setFixedLengthStreamingMode(long contentLength)",
            "Modifier and Type": "void"
        },
        {
            "Comments": "This method is used to enable streaming of a HTTP request body without internal buffering, when the content length is known in advance.",
            "Function": "setFollowRedirects(boolean set)",
            "Modifier and Type": "void"
        },
        {
            "Comments": "Sets whether HTTP redirects  (requests with response code 3xx) should be automatically followed by this class.",
            "Function": "setInstanceFollowRedirects(boolean followRedirects)",
            "Modifier and Type": "static void"
        },
        {
            "Comments": "Sets whether HTTP redirects (requests with response code 3xx) should be automatically followed by this HttpURLConnection instance.",
            "Function": "setRequestMethod(String method)",
            "Modifier and Type": "void"
        },
        {
            "Comments": "Set the method for the URL request, one of:   GET  POST  HEAD  OPTIONS  PUT  DELETE  TRACE  are legal, subject to protocol restrictions.",
            "Function": "usingProxy()",
            "Modifier and Type": "void"
        }
    ]
}