{
    "API": [
        {
            "Comments": "Provide programmatic access to the persistent fields to be written to ObjectOutput.",
            "Function": "ObjectOutputStream.PutField",
            "Modifier and Type": "static class "
        },
        {
            "Comments": "Provide a way for subclasses that are completely reimplementing ObjectOutputStream to not have to allocate private data just used by this implementation of ObjectOutputStream.",
            "Function": "annotateClass(Class<?> cl)",
            "Modifier and Type": "protected "
        },
        {
            "Comments": "Creates an ObjectOutputStream that writes to the specified OutputStream.",
            "Function": "annotateProxyClass(Class<?> cl)",
            "Modifier and Type": " "
        },
        {
            "Comments": "Subclasses may implement this method to allow class data to be stored in the stream.",
            "Function": "close()",
            "Modifier and Type": "protected void"
        },
        {
            "Comments": "Subclasses may implement this method to store custom data in the stream along with descriptors for dynamic proxy classes.",
            "Function": "defaultWriteObject()",
            "Modifier and Type": "protected void"
        },
        {
            "Comments": "Closes the stream.",
            "Function": "drain()",
            "Modifier and Type": "void"
        },
        {
            "Comments": "Write the non-static and non-transient fields of the current class to this stream.",
            "Function": "enableReplaceObject(boolean enable)",
            "Modifier and Type": "void"
        },
        {
            "Comments": "Drain any buffered data in ObjectOutputStream.",
            "Function": "flush()",
            "Modifier and Type": "protected void"
        },
        {
            "Comments": "Enables the stream to do replacement of objects written to the stream.",
            "Function": "putFields()",
            "Modifier and Type": "protected boolean"
        },
        {
            "Comments": "Flushes the stream.",
            "Function": "replaceObject(Object obj)",
            "Modifier and Type": "void"
        },
        {
            "Comments": "Retrieve the object used to buffer persistent fields to be written to the stream.",
            "Function": "reset()",
            "Modifier and Type": "ObjectOutputStream.PutField"
        },
        {
            "Comments": "This method will allow trusted subclasses of ObjectOutputStream to substitute one object for another during serialization.",
            "Function": "useProtocolVersion(int version)",
            "Modifier and Type": "protected Object"
        },
        {
            "Comments": "Reset will disregard the state of any objects already written to the stream.",
            "Function": "write(byte[] buf)",
            "Modifier and Type": "void"
        },
        {
            "Comments": "Specify stream protocol version to use when writing the stream.",
            "Function": "write(byte[] buf, int off, int len)",
            "Modifier and Type": "void"
        },
        {
            "Comments": "Writes an array of bytes.",
            "Function": "write(int val)",
            "Modifier and Type": "void"
        },
        {
            "Comments": "Writes a sub array of bytes.",
            "Function": "writeBoolean(boolean val)",
            "Modifier and Type": "void"
        },
        {
            "Comments": "Writes a byte.",
            "Function": "writeByte(int val)",
            "Modifier and Type": "void"
        },
        {
            "Comments": "Writes a boolean.",
            "Function": "writeBytes(String str)",
            "Modifier and Type": "void"
        },
        {
            "Comments": "Writes an 8 bit byte.",
            "Function": "writeChar(int val)",
            "Modifier and Type": "void"
        },
        {
            "Comments": "Writes a String as a sequence of bytes.",
            "Function": "writeChars(String str)",
            "Modifier and Type": "void"
        },
        {
            "Comments": "Writes a 16 bit char.",
            "Function": "writeClassDescriptor(ObjectStreamClass desc)",
            "Modifier and Type": "void"
        },
        {
            "Comments": "Writes a String as a sequence of chars.",
            "Function": "writeDouble(double val)",
            "Modifier and Type": "void"
        },
        {
            "Comments": "Write the specified class descriptor to the ObjectOutputStream.",
            "Function": "writeFields()",
            "Modifier and Type": "protected void"
        },
        {
            "Comments": "Writes a 64 bit double.",
            "Function": "writeFloat(float val)",
            "Modifier and Type": "void"
        },
        {
            "Comments": "Write the buffered fields to the stream.",
            "Function": "writeInt(int val)",
            "Modifier and Type": "void"
        },
        {
            "Comments": "Writes a 32 bit float.",
            "Function": "writeLong(long val)",
            "Modifier and Type": "void"
        },
        {
            "Comments": "Writes a 32 bit int.",
            "Function": "writeObject(Object obj)",
            "Modifier and Type": "void"
        },
        {
            "Comments": "Writes a 64 bit long.",
            "Function": "writeObjectOverride(Object obj)",
            "Modifier and Type": "void"
        },
        {
            "Comments": "Write the specified object to the ObjectOutputStream.",
            "Function": "writeShort(int val)",
            "Modifier and Type": "void"
        },
        {
            "Comments": "Method used by subclasses to override the default writeObject method.",
            "Function": "writeStreamHeader()",
            "Modifier and Type": "protected void"
        },
        {
            "Comments": "Writes a 16 bit short.",
            "Function": "writeUnshared(Object obj)",
            "Modifier and Type": "void"
        },
        {
            "Comments": "The writeStreamHeader method is provided so subclasses can append or prepend their own header to the stream.",
            "Function": "writeUTF(String str)",
            "Modifier and Type": "protected void"
        }
    ]
}