{
    "API": [
        {
            "Comments": "The number of bytes used to represent a short value in two's complement binary form.",
            "Function": "BYTES",
            "Modifier and Type": "static int"
        },
        {
            "Comments": "A constant holding the maximum value a short can have, 215-1.",
            "Function": "MAX_VALUE",
            "Modifier and Type": "static short"
        },
        {
            "Comments": "A constant holding the minimum value a short can have, -215.",
            "Function": "MIN_VALUE",
            "Modifier and Type": "static short"
        },
        {
            "Comments": "The number of bits used to represent a short value in two's complement binary form.",
            "Function": "SIZE",
            "Modifier and Type": "static int"
        },
        {
            "Comments": "The Class instance representing the primitive type short.",
            "Function": "TYPE",
            "Modifier and Type": "static Class<Short>"
        },
        {
            "Comments": "Deprecated.It is rarely appropriate to use this constructor.",
            "Function": "byteValue()",
            "Modifier and Type": "byte"
        },
        {
            "Comments": "Deprecated.It is rarely appropriate to use this constructor.",
            "Function": "compare(short x, short y)",
            "Modifier and Type": "static int"
        },
        {
            "Comments": "Returns the value of this Short as a byte after a narrowing primitive conversion.",
            "Function": "compareTo(Short anotherShort)",
            "Modifier and Type": "int"
        },
        {
            "Comments": "Compares two short values numerically.",
            "Function": "compareUnsigned(short x, short y)",
            "Modifier and Type": "static int"
        },
        {
            "Comments": "Compares two Short objects numerically.",
            "Function": "decode(String nm)",
            "Modifier and Type": "static Short"
        },
        {
            "Comments": "Compares two short values numerically treating the values as unsigned.",
            "Function": "doubleValue()",
            "Modifier and Type": "double"
        },
        {
            "Comments": "Decodes a String into a Short.",
            "Function": "equals(Object obj)",
            "Modifier and Type": "boolean"
        },
        {
            "Comments": "Returns the value of this Short as a double after a widening primitive conversion.",
            "Function": "floatValue()",
            "Modifier and Type": "float"
        },
        {
            "Comments": "Compares this object to the specified object.",
            "Function": "hashCode()",
            "Modifier and Type": "int"
        },
        {
            "Comments": "Returns the value of this Short as a float after a widening primitive conversion.",
            "Function": "hashCode(short value)",
            "Modifier and Type": "static int"
        },
        {
            "Comments": "Returns a hash code for this Short; equal to the result of invoking intValue().",
            "Function": "intValue()",
            "Modifier and Type": "int"
        },
        {
            "Comments": "Returns a hash code for a short value; compatible with Short.hashCode().",
            "Function": "longValue()",
            "Modifier and Type": "long"
        },
        {
            "Comments": "Returns the value of this Short as an int after a widening primitive conversion.",
            "Function": "parseShort(String s)",
            "Modifier and Type": "static short"
        },
        {
            "Comments": "Returns the value of this Short as a long after a widening primitive conversion.",
            "Function": "parseShort(String s,int radix)",
            "Modifier and Type": "static short"
        },
        {
            "Comments": "Parses the string argument as a signed decimal  short.",
            "Function": "reverseBytes(short i)",
            "Modifier and Type": "static short"
        },
        {
            "Comments": "Parses the string argument as a signed short in the radix specified by the second argument.",
            "Function": "shortValue()",
            "Modifier and Type": "short"
        },
        {
            "Comments": "Returns the value obtained by reversing the order of the bytes in the two's complement representation of the specified short value.",
            "Function": "toString()",
            "Modifier and Type": "String"
        },
        {
            "Comments": "Returns the value of this Short as a short.",
            "Function": "toString(short s)",
            "Modifier and Type": "static String"
        },
        {
            "Comments": "Returns a String object representing this Short's value.",
            "Function": "toUnsignedInt(short x)",
            "Modifier and Type": "static int"
        },
        {
            "Comments": "Returns a new String object representing the specified short.",
            "Function": "toUnsignedLong(short x)",
            "Modifier and Type": "static long"
        },
        {
            "Comments": "Converts the argument to an int by an unsigned conversion.",
            "Function": "valueOf(short s)",
            "Modifier and Type": "static Short"
        },
        {
            "Comments": "Converts the argument to a long by an unsigned conversion.",
            "Function": "valueOf(String s)",
            "Modifier and Type": "static Short"
        },
        {
            "Comments": "Returns a Short instance representing the specified short value.",
            "Function": "valueOf(String s, int radix)",
            "Modifier and Type": "static Short"
        }
    ]
}